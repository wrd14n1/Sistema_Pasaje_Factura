/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package sistemapasajes.View;

import com.itextpdf.text.Document;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemapasajes.GenerarQR;
import sistemapasajes.Sunat;
import sistemapasajes.dao.ComprobanteDAO;
import sistemapasajes.dao.ComprobanteDAOImpl;
import sistemapasajes.dao.ConfiguracionDAO;
import sistemapasajes.dao.ConfiguracionDAOImpl;
import sistemapasajes.dao.RutaArchivoDAO;
import sistemapasajes.dao.RutaArchivoDAOImpl;
import sistemapasajes.modelo.ComprobanteModel;
import sistemapasajes.modelo.ConfiguracionModel;
import sistemapasajes.modelo.RutaArchivoModel;


/**
 *
 * @author edson
 */
public class Lpasajes extends javax.swing.JInternalFrame {

String rutahash;
String rutaqr;
    public Lpasajes() {
        initComponents();
        CargarPasajes();
    }
    
    private void CargarPasajes(){
              DefaultTableModel modeloTabla = new DefaultTableModel();
        
        modeloTabla.addColumn("N° Comprobante");
        modeloTabla.addColumn("Tipo Comprobante");
        modeloTabla.addColumn("Razón Social");
        modeloTabla.addColumn("N° Documento");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Monto");
        ComprobanteDAO comprobantedao = new ComprobanteDAOImpl();
        List<ComprobanteModel> comprobantes = comprobantedao.obtenerTodosComprobantes();
        for (ComprobanteModel comprobante: comprobantes) {
            Object[] fila ={
                comprobante.getSerieComp(),
                comprobante.getTipoComp(),
                comprobante.getClienteComp(),
                comprobante.getDocclienteComp(),
                comprobante.getFechaComp(),
                comprobante.getImptotalComp()
            };
            modeloTabla.addRow(fila);
        }
        tabpasajes.setModel(modeloTabla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabpasajes = new javax.swing.JTable();
        btnpdf = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Lista de Pasajes");

        tabpasajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabpasajes);

        btnpdf.setText("Crear PDF");
        btnpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnpdf)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnpdf)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpdfActionPerformed
       RutaArchivoDAO rutaarchivodao = new RutaArchivoDAOImpl();
      
        String rhash ;
                
         ConfiguracionDAO configdao = new ConfiguracionDAOImpl();
         ConfiguracionModel configuracion = configdao.obtenerConfiguracionPorId(1);      
         
         ComprobanteDAO comprobantedao = new ComprobanteDAOImpl();
         ComprobanteModel comprobante = new ComprobanteModel();
         
// Obtener el índice de la fila seleccionada
    int indiceFilaSeleccionada = tabpasajes.getSelectedRow();

    // Verificar si se ha seleccionado una fila
    if (indiceFilaSeleccionada != -1) {
        // Obtener los datos de la fila seleccionada
        String numComprobante = tabpasajes.getValueAt(indiceFilaSeleccionada, 0).toString();
        String tipoComprobante = tabpasajes.getValueAt(indiceFilaSeleccionada, 1).toString();
        String razonSocial = tabpasajes.getValueAt(indiceFilaSeleccionada, 2).toString();
        String numDocumento = tabpasajes.getValueAt(indiceFilaSeleccionada, 3).toString();
        String fecha = tabpasajes.getValueAt(indiceFilaSeleccionada, 4).toString();
        String monto = tabpasajes.getValueAt(indiceFilaSeleccionada, 5).toString();
        String tipo;
          RutaArchivoModel rutaarchivo = rutaarchivodao.obtenerRutaporEmpresa(configuracion.getRucConf(),"hash");
          RutaArchivoModel rutaqr = rutaarchivodao.obtenerRutaporEmpresa(configuracion.getRucConf(), "qr");
          String rqr = rutaqr.getDescRutaArchivo()+configuracion.getRucConf()+"-";
        String datos;
        if (tipoComprobante.equals("BOLETA")) {
            tipo="03";
        } else{
            tipo="01";
        }
        String ruta = rutaarchivo.getDescRutaArchivo()+configuracion.getRucConf()+"-" + tipo + "-" + numComprobante + ".xml";
        Sunat sunat = new Sunat();
        try {
            
          
            System.out.println(ruta);
           
            rhash= sunat.getHash(ruta);
             System.out.println(rhash);
             comprobante.setHashComp(rhash);
             comprobante.setSerieComp(numComprobante);
             comprobantedao.actualizarComprobanteHash(comprobante);
             
               datos =configuracion.getRucConf()+"|"+
                    tipo+"|"+numComprobante+"|"+ 
                    monto+"|"+ numDocumento+"|"+rhash;
            GenerarQR genqr = new GenerarQR();
            genqr.GenerarQR(datos, numComprobante, rqr);
             
        } catch (IOException ex) {
            System.out.println("error: " + ex);
            JOptionPane.showMessageDialog(this, "Error: " +ex, "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Lpasajes.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Ahora puedes utilizar estos datos para crear un PDF o realizar cualquier otra acción
        // Por ejemplo, puedes pasar estos datos a un método de creación de PDF
        crearPDF(numComprobante, tipoComprobante, razonSocial, numDocumento, fecha, monto);
    } else {
        // No se ha seleccionado ninguna fila, puedes mostrar un mensaje o realizar cualquier otra acción
        System.out.println("Ninguna fila seleccionada");
    }
    }//GEN-LAST:event_btnpdfActionPerformed
// Ejemplo de un método para crear un PDF utilizando los datos de la fila seleccionada
private void crearPDF(String numComprobante, String tipoComprobante, String razonSocial, String numDocumento, String fecha, String monto) {
    Document document = new Document();

    try {
        // Especifica la ruta y el nombre del archivo PDF
        String rutaPDF = "ruta/del/archivo/" + numComprobante + ".pdf";
        PdfWriter.getInstance(document, new FileOutputStream(rutaPDF));
        document.open();

        // Agrega contenido al PDF
        document.add(new Paragraph("N° Comprobante: " + numComprobante));
        document.add(new Paragraph("Tipo Comprobante: " + tipoComprobante));
        document.add(new Paragraph("Razón Social: " + razonSocial));
        document.add(new Paragraph("N° Documento: " + numDocumento));
        document.add(new Paragraph("Fecha: " + fecha));
        document.add(new Paragraph("Monto: " + monto));

        // Agrega una imagen al PDF (ajusta la ruta de la imagen según tu caso)
        Image imagen = Image.getInstance("ruta/de/tu/imagen/logo.png");
        document.add(imagen);

        // Puedes utilizar PdfPTable para organizar la información en una tabla
        PdfPTable tabla = new PdfPTable(2);
        tabla.addCell("Campo 1");
        tabla.addCell("Campo 2");
        document.add(tabla);

        document.close();
        System.out.println("PDF creado exitosamente: " + rutaPDF);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al crear el PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnpdf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabpasajes;
    // End of variables declaration//GEN-END:variables
}
